import{k as i,A as s,I as c}from"./index.3cc0610f.js";const h=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${o}`},body:JSON.stringify({chat:a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},u=async(o="")=>{let a=null;const e=await fetch(`${i}/chats/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return e},p=async(o="")=>{let a=null;const e=await fetch(`${i}/chats/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return e},d=async o=>{let a=null;const e=await fetch(`${i}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return e},f=async o=>{let a=null;const e=await fetch(`${i}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return e},y=async o=>{let a=null;const e=await fetch(`${i}/chats/tags/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.log(t),null));if(a)throw a;return e},w=async(o="",a)=>{let e=null;const t=await fetch(`${i}/chats/tags/tag/${a}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},j=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/${a}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},g=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/share/${a}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},$=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/${a}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},T=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/${a}/archive`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},A=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/${a}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},m=async(o,a,e)=>{let t=null;const n=await fetch(`${i}/chats/${a}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({chat:e})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(t=r,console.log(r),null));if(t)throw t;return n},S=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/${a}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return t},C=async(o,a)=>{let e=null;const t=await fetch(`${i}/chats/${a}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return t},B=async(o,a,e)=>{let t=null;const n=await fetch(`${i}/chats/${a}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({tag_name:e,chat_id:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(t=r,console.log(r),null));if(t)throw t;return n},E=async(o,a,e)=>{let t=null;const n=await fetch(`${i}/chats/${a}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({tag_name:e,chat_id:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(t=r,console.log(r),null));if(t)throw t;return n},z=async o=>{let a=null;const e=await fetch(`${i}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return e},I=async o=>{let a=null;const e=await fetch(`${s}/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t.detail,null));if(a)throw a;return e},O=async(o,a)=>{let e=null;const t=await fetch(`${s}/config/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({...a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return t},G=async(o,a)=>{const e=new FormData;e.append("file",a);let t=null;const n=await fetch(`${s}/transcriptions`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${o}`},body:e}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(t=r.detail,console.log(r),null));if(t)throw t;return n},P=async(o="",a="alloy",e="")=>{let t=null;const n=await fetch(`${s}/speech`,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({model:"tts-1",input:e,voice:a})}).then(async r=>{if(!r.ok)throw await r.json();return r}).catch(r=>(t=r.detail,console.log(r),null));if(t)throw t;return n},_=async(o="")=>{let a=null;const e=await fetch(`${c}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?a=t.detail:a="Server connection failed",null));if(a)throw a;return e},v=async(o="",a,e)=>{let t=null;const n=await fetch(`${c}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({engine:a,enabled:e})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r?t=r.detail:t="Server connection failed",null));if(t)throw t;return n},b=async(o="")=>{let a=null;const e=await fetch(`${c}/key`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?a=t.detail:a="Server connection failed",null));if(a)throw a;return e.OPENAI_API_KEY},N=async(o="",a)=>{let e=null;const t=await fetch(`${c}/key/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({key:a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return t.OPENAI_API_KEY},J=async(o="")=>{let a=null;const e=await fetch(`${c}/url`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?a=t.detail:a="Server connection failed",null));if(a)throw a;return e},L=async(o="",a={})=>{let e=null;const t=await fetch(`${c}/url/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({...a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return t},k=async(o="")=>{let a=null;const e=await fetch(`${c}/size`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?a=t.detail:a="Server connection failed",null));if(a)throw a;return e.IMAGE_SIZE},D=async(o="",a)=>{let e=null;const t=await fetch(`${c}/size/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({size:a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return t.IMAGE_SIZE},M=async(o="")=>{let a=null;const e=await fetch(`${c}/steps`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?a=t.detail:a="Server connection failed",null));if(a)throw a;return e.IMAGE_STEPS},U=async(o="",a)=>{let e=null;const t=await fetch(`${c}/steps/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({steps:a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return t.IMAGE_STEPS},K=async(o="")=>{let a=null;const e=await fetch(`${c}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?a=t.detail:a="Server connection failed",null));if(a)throw a;return e},R=async(o="")=>{let a=null;const e=await fetch(`${c}/models/default`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?a=t.detail:a="Server connection failed",null));if(a)throw a;return e.model},x=async(o="",a)=>{let e=null;const t=await fetch(`${c}/models/default/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({model:a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return t.model},F=async(o="",a)=>{let e=null;const t=await fetch(`${c}/generations`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...o&&{authorization:`Bearer ${o}`}},body:JSON.stringify({prompt:a})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return t};export{y as A,C as B,G as C,B as D,E,$ as F,A as G,g as H,P as I,F as J,d as a,f as b,u as c,z as d,h as e,_ as f,I as g,J as h,b as i,k as j,M as k,K as l,R as m,L as n,v as o,N as p,x as q,D as r,U as s,p as t,O as u,T as v,S as w,j as x,m as y,w as z};
